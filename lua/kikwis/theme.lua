local h = require('kikwis/highlight').highlight

return function(colors)
  return {
    --
    -- default groups
    --
    h('ColorColumn', { bg = colors.gray2 }),
    h('Comment', { fg = colors.gray6, italic = true }),
    h('Conceal', { fg = colors.gray4 }),
    h('Cursor', { fg = colors.gray3, bg = colors.white }),
    h('CursorColumn', { bg = colors.gray2 }),
    h('CursorLineNr', { fg = colors.white }),
    h('DiffAdd', { fg = colors.green }),
    h('DiffChange', { fg = colors.yellow }),
    h('DiffDelete', { fg = colors.red }),
    h('Directory', { fg = colors.orange }),
    h('ErrorMsg', { fg = colors.red }),
    h('Folded', { fg = colors.gray4, bg = colors.gray0 }),
    h('LineNr', { fg = colors.gray5, bg = colors.gray1 }),
    h('MatchParen', { fg = colors.white, bg = colors.gray4 }),
    h('ModeMsg', { fg = colors.gray6 }),
    h('MoreMsg', { fg = colors.yellow }),
    h('MsgSeparator', { fg = colors.orange }),
    h('Normal', { fg = colors.white, bg = colors.gray1 }),
    h('NormalFloat', { fg = colors.white, bg = colors.gray3 }),
    h('NormalNC', { fg = colors.white, bg = colors.gray1 }),
    h('Pmenu', { fg = colors.white, bg = colors.gray3 }),
    h('PmenuSel', { fg = colors.white, bg = colors.gray6 }),
    h('Question', { fg = colors.green }),
    h('QuickFixLine', { fg = colors.magenta }),
    h('Search', { fg = colors.gray2, bg = colors.yellow }),
    h('SpellBad', { fg = colors.red, undercurl = true }),
    h('SpellCap', { fg = colors.blue, undercurl = true }),
    h('SpellLocal', { fg = colors.teal, undercurl = true }),
    h('SpellRare', { fg = colors.magenta, undercurl = true }),
    h('StatusLine', { fg = colors.white, bg = colors.gray3 }),
    h('StatusLineNC', { fg = colors.gray7, bg = colors.gray3 }),
    h('TabLine', { fg = colors.white, bg = colors.gray3 }),
    h('TabLineFill', { fg = colors.white, bg = colors.gray0 }),
    h('TabLineSel', { fg = colors.white, bg = colors.gray4 }),
    h('TermCursor', { fg = colors.gray3, bg = colors.white }),
    h('Title', { fg = colors.orange }),
    h('VertSplit', { fg = colors.gray1, bg = colors.gray2 }),
    h('Visual', { bg = colors.gray3 }),
    h('VisualNOS', { bg = colors.gray2 }),
    h('WarningMsg', { fg = colors.red }),
    h('Whitespace', { fg = colors.gray4 }),
    h('CursorIM', 'Cursor'),
    h('CursorLine', 'CursorColumn'),
    h('DiffAdded', 'DiffAdd'),
    h('DiffRemoved', 'DiffDelete'),
    h('DiffText', 'DiffChange', { underline = true }),
    h('FoldColumn', 'LineNr'),
    h('ICursor', 'Cursor'),
    h('IncSearch', 'Search'),
    h('MsgArea', 'Normal'),
    h('NonText', 'Whitespace'),
    h('PmenuSbar', 'Pmenu'),
    h('PmenuThumb', 'PmenuSel'),
    h('SignColumn', 'LineNr'),
    h('SpecialKey', 'Whitespace'),
    h('Substitute', 'Search'),
    h('WildMenu', 'Pmenu'),

    --
    -- default syntax
    --
    h('Constant', { fg = colors.magenta }),
    h('String', { fg = colors.orange }),
    h('Character', { fg = colors.orange }),
    h('Identifier', { fg = colors.blue }),
    h('Function', { fg = colors.green }),
    h('Operator', { fg = colors.salmon }),
    h('Exception', { fg = colors.red }),
    h('Tag', { fg = colors.orange }),
    h('Underlined', { underline = true }),
    h('Bold', { bold = true }),
    h('Italic', { italic = true }),
    h('Ignore', { fg = colors.gray4 }),
    h('Error', { fg = colors.red }),
    h('Todo', { fg = colors.magenta, bold = true }),
    h('Number', { fg = colors.magenta }),
    h('Boolean', 'Number'),
    h('Float', 'Number'),
    h('Statement', { fg = colors.red }),
    h('Conditional', 'Statement'),
    h('Repeat', 'Statement'),
    h('Label', 'Statement'),
    h('Keyword', 'Statement'),
    h('PreProc', { fg = colors.magenta }),
    h('Include', 'PreProc'),
    h('Define', 'PreProc'),
    h('Macro', 'PreProc'),
    h('PreCondit', 'PreProc'),
    h('Type', { fg = colors.teal }),
    h('StorageClass', 'Type'),
    h('Structure', 'Type'),
    h('Typedef', 'Type'),
    h('Special', { fg = colors.gray8 }),
    h('SpecialChar', 'Special'),
    h('Delimiter', 'Special'),
    h('SpecialComment', 'Special'),
    h('Debug', 'Special'),

    --
    -- neovim builtin lsp
    --
    h('LspDiagnosticsDefaultError', { fg = colors.red }),
    h('LspDiagnosticsDefaultWarning', { fg = colors.yellow }),
    h('LspDiagnosticsDefaultInformation', { fg = colors.blue }),
    h('LspDiagnosticsDefaultHint', { fg = colors.green }),
    h('LspDiagnosticsVirtualTextError', { fg = colors.red, bg = colors.gray0 }),
    h('LspDiagnosticsVirtualTextWarning', { fg = colors.yellow, bg = colors.gray0 }),
    h('LspDiagnosticsVirtualTextInformation', { fg = colors.blue, bg = colors.gray0 }),
    h('LspDiagnosticsVirtualTextHint', { fg = colors.gray7, bg = colors.gray0 }),
    h('LspDiagnosticsUnderlineError', { undercurl = true }),
    h('LspDiagnosticsUnderlineWarning', { undercurl = true }),
    h('LspDiagnosticsUnderlineInformation', { undercurl = true }),
    h('LspDiagnosticsUnderlineHint', { undercurl = true }),
    h('LspDiagnosticsFloatingError', { fg = colors.red, bg = colors.gray3 }),
    h('LspDiagnosticsFloatingWarning', { fg = colors.yellow, bg = colors.gray3 }),
    h('LspDiagnosticsFloatingInformation', { fg = colors.blue, bg = colors.gray3 }),
    h('LspDiagnosticsFloatingHint', { fg = colors.green, bg = colors.gray3 }),
    h('LspDiagnosticsSignError', { fg = colors.gray2, bg = colors.red }),
    h('LspDiagnosticsSignWarning', { fg = colors.gray2, bg = colors.yellow }),
    h('LspDiagnosticsSignInformation', { fg = colors.gray2, bg = colors.blue }),
    h('LspDiagnosticsSignHint', { fg = colors.gray2, bg = colors.gray6 }),

    --
    -- treesitter
    --
    h('TSError', { fg = colors.white, undercurl = true }),
    h('TSKeywordFunction', { fg = colors.red }),
    h('TSSymbol', { fg = colors.blue, italic = true }),
    h('TSText', { fg = colors.white }),
    h('TSTitle', { fg = colors.orange, bold = true }),
    h('TSVariableBuiltin', { fg = colors.magenta }),
    h('TSAttribute', 'TSText'), -- REVIEW(lucastrvsn): unstable feature
    h('TSField', 'TSText'),
    h('TSParameter', 'TSText'),
    h('TSPunctBracket', 'TSText'),
    h('TSVariable', 'TSText'),
    h('TSBoolean', 'Boolean'),
    h('TSCharacter', 'Character'),
    h('TSComment', 'Comment'),
    h('TSConditional', 'Conditional'),
    h('TSOperator', 'Operator'),
    h('TSParameterReference', 'TSParameter'),
    h('TSProperty', 'TSText'),
    h('TSPunctDelimiter', 'Delimiter'),
    h('TSPunctSpecial', 'TSPunctDelimiter'),
    h('TSRepeat', 'Repeat'),
    h('TSStrike', 'Comment', { underline = true }),
    h('TSString', 'String'),
    h('TSStringEscape', 'TSString', { italic = true }),
    h('TSStringRegex', 'TSString'),
    h('TSLiteral', 'TSString'),
    h('TSStrong', 'TSText', { bold = true }),
    h('TSTag', 'Tag'),
    h('TSTagDelimiter', { fg = colors.green }),
    h('TSType', 'Type'),
    h('TSTypeBuiltin', { fg = colors.blue }),
    h('TSURI', 'TSSymbol'),
    h('TSUnderline', 'TSText', { underline = true }),
    h('TSNumber', 'Number'),
    h('TSNamespace', 'PreProc'),
    h('TSInclude', 'TSNamespace'),
    h('TSAnnotation', 'TSNamespace'),
    h('TSLabel', 'Label'),
    h('TSKeyword', 'Keyword'),
    h('TSConstructor', 'TSText'),
    h('TSFunction', 'Function'),
    h('TSFuncMacro', 'TSFunction'),
    h('TSFuncBuiltin', 'TSFunction'),
    h('TSMethod', 'TSFunction'),
    h('TSFloat', 'Float'),
    h('TSException', 'Exception'),
    h('TSEmphasis', 'TSText', { italic = true }),
    h('TSConstant', 'Constant'),
    h('TSConstMacro', 'Constant', { bold = true }),
    h('TSConstBuiltin', 'Constant', { italic = true }),

    --
    -- telescope
    --
    h('TelescopeSelection', { bg = colors.gray5 }),
    h('TelescopeSelectionCaret', { fg = colors.teal }),
    h('TelescopeMultiSelection', { fg = colors.teal }),
    h('TelescopeNormal', { bg = colors.gray2 }),
    h('TelescopePreviewNormal', { bg = colors.gray2 }),
    h('TelescopeMatching', { fg = colors.teal, italic = true, underline = true }),
    h('TelescopePromptPrefix', { fg = colors.white }),
    h('TelescopeBorder', { fg = colors.gray6, bg = colors.gray2 }),
    h('TelescopePromptBorder', 'TelescopeBorder'),
    h('TelescopeResultsBorder', 'TelescopeBorder'),
    h('TelescopePreviewBorder', 'TelescopeBorder')
  }
end
